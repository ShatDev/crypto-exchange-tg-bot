from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from handler import user
from bot_create import path
from data_base import sql_add_tron_data, sql_update_tron_status
from config import tron_dict
from kb import inl_currencies_trx, inl_currencies_trx_rec, yn_trx, menu, sent_tron, received_trx
from random import randint
import requests


# —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
class Form_trx(StatesGroup):
    currency_tr = State()
    currency_receive_tr = State()
    wallet_tr = State()
    amount_state_tr = State()
    amount_receive_state_tr = State()
    status_p_tr = State()
    number_p_tr = State()


# –≤—ã–±–æ—Ä —Ç–æ–∫–µ–Ω–∞ (–æ—Ç–¥–∞—Ç—å)
async def trx_currencies_exc(callback: types.CallbackQuery):
    await Form_trx.currency_tr.set()
    await callback.message.edit_caption('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –æ—Ç–¥–∞—ë—Ç–µ (<b>TRON</b>):', reply_markup=inl_currencies_trx)


# –≤—ã–±–æ—Ä —Ç–æ–∫–µ–Ω–∞(–ø–æ–ª—É—á–∏—Ç—å)
async def want_exch_trx(callback: types.CallbackQuery, state: FSMContext):
    global sending_token_tr
    sending_token_tr = callback.data.replace('_trx_e', '')
    if sending_token_tr == 'usdt':
        await callback.message.edit_caption(f'–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ USDT! (<b>—Å–µ—Ç—å TRON</b>)\n{"- "*29}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç–µ', reply_markup=inl_currencies_trx_rec)
    if sending_token_tr == 'eth':
        await callback.message.edit_caption(f'–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ Ethereum! (<b>—Å–µ—Ç—å TRON</b>)\n{"- "*29}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç–µ', reply_markup=inl_currencies_trx_rec)
    if sending_token_tr == 'ltc':
        await callback.message.edit_caption(f'–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ Litecoin! (<b>—Å–µ—Ç—å TRON</b>)\n{"- "*34}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç–µ', reply_markup=inl_currencies_trx_rec)
    if sending_token_tr == 'xrp':
        await callback.message.edit_caption(f'–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ XRP! (<b>—Å–µ—Ç—å TRON</b>)\n{"- "*28}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç–µ', reply_markup=inl_currencies_trx_rec)
    async with state.proxy() as data:
        data['currency_tr'] = sending_token_tr.upper()
    await Form_trx.next()


# –∑–∞–ø–∏—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–∞ –∏ –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
async def trx_currencies_rec(callback: types.CallbackQuery, state: FSMContext):
    global tkn_rec_trx
    tkn_rec_trx = callback.data.replace('_trx_rec', '')
    if tkn_rec_trx != sending_token_tr:
        async with state.proxy() as data:
            data['currency_receive_tr'] = tkn_rec_trx.upper()
        await Form_trx.next()
        await callback.message.edit_caption('''
–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã (<b>TRON</b>)
–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å?\n
–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: <b>TMbyz1ZykG4XTXsfTMueKz79nhABocHuGs</b>
''')
        print(sending_token_tr, tkn_rec_trx)
    else:
        await callback.message.edit_caption('–ù–µ–ª—å–∑—è –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –¥–≤–∞ –æ–¥–∏–Ω–Ω–∞–∫–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–∞!', reply_markup=menu)
        await state.finish()


# –∑–∞–ø–∏—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞ –∏ –≤–≤–æ–¥ –∫–æ–ª-–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤
async def addresss_trx(message: types.Message, state: FSMContext):
    global addr_trx, am_rec_tr
    addr_trx = message.text
    async with state.proxy() as data:
        data['wallet_tr'] = addr_trx
    await Form_trx.next()
    await message.answer_photo(user.photo1, f'''
–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å\n{"-" * 40}
<i>–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 {sending_token_tr.upper()} = {(am_rec_tr := requests.get(url=f'https://min-api.cryptocompare.com/data/price?fsym={sending_token_tr}&tsyms={tkn_rec_trx}{path}').json()[tkn_rec_trx.upper()])} {tkn_rec_trx.upper()}</i>
'''
    )


# –∑–∞–ø–∏—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ª-–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤ –∏ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
async def amount_trx(message: types.Message, state: FSMContext):
    global amount_trx_var
    amount_trx_var = float(message.text)
    async with state.proxy() as data:
        data['amount_state_tr'] = amount_trx_var
    await Form_trx.next()
    async with state.proxy() as data:
        data['amount_receive_state_tr'] = amount_trx_var * float(am_rec_tr)
    await message.answer_photo(user.photo1, f'''
–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–µ–Ω–∏—è: <b>{addr_trx}</b>\n{"-"*16}
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ: <b>{amount_trx_var} {sending_token_tr.upper()}</b>
–ü–æ–ª—É—á–∞–µ—Ç–µ: <b>{amount_trx_var * float(am_rec_tr)} {tkn_rec_trx.upper()}</b>
–°–µ—Ç—å: <b>TRON</b>
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.''', reply_markup=yn_trx
)
    await Form_trx.next()


# —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
async def info_trx(callback: types.CallbackQuery, state: FSMContext):
    global numb_tr
    await callback.message.answer_photo(user.photo1, f'''
–ó–∞—è–≤–∫–∞  ‚Ññ <code>{(numb_tr := str(randint(1, 100)) + str(callback.from_user.id))}</code> —Å–æ–∑–¥–∞–Ω–∞.\n{"-" * 40}
–û—Ç–ø—Ä–∞–≤—å—Ç–µ {amount_trx_var} {sending_token_tr.upper()} –Ω–∞ –∞–¥—Ä–µ—Å
<code>{tron_dict[sending_token_tr][0]}</code>''', reply_markup=sent_tron
    )
    async with state.proxy() as data:
        data['status_p_tr'] = '—Å–æ–∑–¥–∞–Ω–∞'
    await Form_trx.next()
    
    async with state.proxy() as data:
        data['number_p_tr'] = numb_tr
    await sql_add_tron_data(state)
    await state.finish()


# –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞—è–≤–∫–∏ (–æ—Ç–º–µ–Ω–∞, –æ–ø–ª–∞—á–µ–Ω–∞)
async def sent_money_trx(callback: types.CallbackQuery):
    if callback.data == 'sent_tron':
        await sql_update_tron_status('–æ–ø–ª–∞—á–µ–Ω–∞', addr_trx, numb_tr)
        await callback.message.edit_caption('<b>–û—Ç–ª–∏—á–Ω–æ. –ü–ª–∞—Ç—ë–∂ –ø–æ—Å—Ç—É–ø–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç üïõ</b>', reply_markup=received_trx)  
    else:
        await sql_update_tron_status('–æ—Ç–º–µ–Ω–µ–Ω–∞', addr_trx, numb_tr)
        await callback.message.edit_caption('<b>–ü–ª–∞—Ç—ë–∂ –æ—Ç–º–µ–Ω—ë–Ω</b>', reply_markup=menu)


# –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –≤—ã–≤–æ–¥–æ–º –∏–Ω–ª. –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é
async def received_money_tron(callback: types.CallbackQuery):
    if callback.data == 'received_trx':
        await sql_update_tron_status('–≤—ã–ø–æ–ª–Ω–µ–Ω–∞', addr_trx, numb_tr)
        await callback.message.edit_caption(f'''
–û—Ç–ª–∏—á–Ω–æ! –ó–∞—è–≤–∫–∞ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! üéâ
{"-" * 40}\n
<b>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º! üíü</b>''', reply_markup=menu)


# —Ö—ç–Ω–¥–ª–µ—Ä—ã
def register_addramount_trx(dp: Dispatcher):
    dp.register_callback_query_handler(trx_currencies_exc, text='trx20', state=None)
    dp.register_callback_query_handler(want_exch_trx, Text(endswith='_trx_e'), state=Form_trx.currency_tr)
    dp.register_callback_query_handler(trx_currencies_rec, Text(endswith='_trx_rec'), state=Form_trx.currency_receive_tr)
    dp.register_message_handler(addresss_trx, Text(startswith='T'), state=Form_trx.wallet_tr)
    dp.register_message_handler(amount_trx, state=Form_trx.amount_state_tr)
    dp.register_callback_query_handler(info_trx, text='yes_trx', state=Form_trx.status_p_tr)
    dp.register_callback_query_handler(info_trx, text='menu')
    dp.register_callback_query_handler(sent_money_trx, text='sent_tron')
    dp.register_callback_query_handler(sent_money_trx, text='cancel_trx')
    dp.register_callback_query_handler(received_money_tron, text='received_trx')
